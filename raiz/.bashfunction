# >>>>>> Functions

function sftpp(){
  sftp -oPort=${1} hostname@192.168.${2}
}

function sshp(){
  ssh -p ${1} hostname@192.168.${2}
}

function countdown(){
   date1=$((`date +%s` + $1)); 
   while [ "$date1" -ge `date +%s` ]; do 
     echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
     sleep 0.1
   done
   notify-send "Hola" "Cuenta regresiva terminada" 
}

function tomp3(){
  mkdir -v "encoded"

  for i in *."$1"
  do
  ffmpeg -i "$i" -acodec libmp3lame -ab 128k -ar 22050 "encoded/$i.mp3"
  done
}

function mp3low(){
  mkdir -v "portable"

  for i in *.mp3 
  do lame -q 0 -b 60 -m j "$i" "portable/$i" 
  done
}

# rename youtube-dl erase add caracters and .m4a
function rendl(){
  mkdir -v "rename"

  for i in *."$1"
  do
    cp "$i" "rename/${i:0:${#i}-20}.mp3"
  done
}
# erase add caracteres variables to file 
# 1 input extension, 2 input number caracters to delete
function delfs8(){
  mkdir -v "rename"

  for i in *."$1"
  do
    cp "$i" "rename/${i:0:${#i}-$2}.$1"
  done
}

mkcd ()
{
mkdir -p -- "$1" && cd -P -- "$1"
}

# Automatically do an ls after each cd
cd() {
  if [ -n "$1" ]; then
    builtin cd "$@" && ls --group-directories-first
  else
    builtin cd ~ && ls --group-directories-first
  fi
}

## COMPRESSION FUNCTION ##
function compress() {
   # credit goes to: daenyth
   FILE=$1
   shift
   case $FILE in
      *.tar.bz2) tar cjf $FILE $*  ;;
      *.tar.gz)  tar czf $FILE $*  ;;
      *.tgz)     tar czf $FILE $*  ;;
      *.zip)     zip $FILE $*      ;;
      *.rar)     rar $FILE $*      ;;
      *)         echo "Filetype not recognized" ;;
   esac
}


# Extract archive
function extract {
    if [ -z "$1" ]; then
        echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    else
        if [ -f $1 ] ; then
            case $1 in
                *.tar.bz2)   tar xvjf ./$1    ;;
                *.tar.gz)    tar xvzf ./$1    ;;
                *.tar.xz)    tar xvJf ./$1    ;;
                *.lzma)      unlzma ./$1      ;;
                *.bz2)       bunzip2 ./$1     ;;
                *.rar)       unrar x -ad ./$1 ;;
                *.gz)        gunzip ./$1      ;;
                *.tar)       tar xvf ./$1     ;;
                *.tbz2)      tar xvjf ./$1    ;;
                *.tgz)       tar xvzf ./$1    ;;
                *.zip)       unzip ./$1       ;;
                *.Z)         uncompress ./$1  ;;
                *.7z)        7z x ./$1        ;;
                *.xz)        unxz ./$1        ;;
                *.exe)       cabextract ./$1  ;;
                *)           echo "extract: '$1' - unknown archive method" ;;
            esac
        else
            echo "$1 - file does not exist"
        fi
    fi
}

# Color man pages
man() {
  env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
      man "$@"
}


#https://es.stackoverflow.com/questions/25890/c%c3%b3mo-guardar-una-salida-de-comando-bash-en-variable#26954
function lv(){ 
  live-server --host=127.0.0.1 --port=8080 --entry-file=pwd${1}.html;
}

